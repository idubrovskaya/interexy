(()=>{var n={475:(n,r,A)=>{"use strict";A.d(r,{Z:()=>d});var e=A(537),t=A.n(e),o=A(645),i=A.n(o),a=A(667),c=A.n(a),s=new URL(A(704),A.b),l=i()(t()),u=c()(s);l.push([n.id,`@font-face{font-family:custom-I1b806;src:url(${u}) format("woff");font-weight:normal;font-style:normal}*{box-sizing:border-box;margin:0;padding:0}html{scroll-behavior:smooth}body{height:100%}.wrapper{display:flex;flex-direction:column;min-height:100vh}header{padding:40px 0;width:100%}.dropdown{display:flex;justify-content:space-between;align-items:center;max-width:1050px;width:100%;margin:auto;padding:0 15px}.dropdown__block{position:relative;display:inline-block;padding:20px}.dropdown__block:hover .dropdown__content{display:block}.dropdown__block:hover .dropbtn{background-color:#854392}.dropdown__content{display:none;position:absolute;background-color:#eadcfc;min-width:200px;box-shadow:0px 8px 16px 0px rgba(0,0,0,.2);z-index:1}.dropdown__content a{color:#000;font-size:18px;padding:12px 16px;text-decoration:none;display:block}.dropdown__content a:hover{background-color:#da91da}.dropbtn{background-color:#c993ec;color:#000;padding:25px;font-size:24px;border:none;border-radius:20px;cursor:pointer}.checkbox{margin:150px 15px}.burger-input{top:0;left:0;opacity:0;width:100%;height:45px;cursor:pointer;position:absolute}.burger-input+label{width:30px;display:block;margin:0 auto;padding:10px 0;cursor:pointer;position:relative}.burger-input+label:after,.burger-input+label:before,.burger-input+label .burger{content:"";width:25px;height:4px;display:block;margin:3px auto;border-radius:3px;background-color:#1c5081;transition:all 200ms ease-in-out}.burger-input:checked+label{top:4px}.burger-input:checked+label:before{transform:translateY(2px) rotate(135deg)}.burger-input:checked+label:after{transform:translateY(-12px) rotate(-135deg)}.burger-input:checked+label .burger{transform:scale(0)}.burger-input:checked~nav{display:block}.burger-input:checked~nav li{display:block;text-align:center}.checkbox__block{display:none}.checkbox__links{margin:0;padding:0;width:100%;list-style:none;text-align:center}ul a{display:block;padding:10px 0;color:#fff;background-color:#6281d8;transition:background-color 250ms ease-in-out;font-size:20px}ul a:hover{background-color:#7691dd}a{text-decoration:none}.animation{margin:20px;display:flex;flex-direction:column}.square__animation{width:50px;height:50px;background:#d280d8;animation-duration:3s;animation-name:slidein;animation-iteration-count:infinite;animation-direction:alternate}@keyframes slidein{from{margin-left:calc(100% - 50px)}to{margin-left:0%}}.square__transition{width:50px;height:50px;background:#d280d8;animation-duration:3s;animation-name:transition-animation;animation-iteration-count:infinite;animation-direction:alternate}@keyframes transition-animation{from{transform:translateX(0)}to{transform:translateX(calc(100vw - 100px))}}.square{width:50px;height:50px;background:#d280d8;position:absolute}.square__settimeout{height:120px;position:relative}.square-animation-frame{position:relative}.button{background-color:#ff0}.my-house-link{color:orange;transition:2s color}.my-house-link:hover{color:purple}.my-house-link:before{text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-family:custom-I1b806;font-weight:normal;content:"î€€"}`,"",{version:3,sources:["webpack://./src/assets/style.scss","webpack://./src/assets/_constants.scss"],names:[],mappings:"AAAA,WAAA,yBAAA,CAAA,0DAAA,CAAA,kBAAA,CAAA,iBAAA,CAAA,EAIA,qBACE,CAAA,QACA,CAAA,SACA,CAAA,KAGF,sBACE,CAAA,KAGF,WACE,CAAA,SAIF,YACE,CAAA,qBACA,CAAA,gBACA,CAAA,OAGF,cACE,CAAA,UACA,CAAA,UAKF,YACE,CAAA,6BACA,CAAA,kBACA,CAAA,gBACA,CAAA,UACA,CAAA,WACA,CAAA,cACA,CAAA,iBAEA,iBACE,CAAA,oBACA,CAAA,YACA,CAAA,0CAGF,aACE,CAAA,gCAGF,wBACE,CAAA,mBAGF,YACE,CAAA,iBACA,CAAA,wBACA,CAAA,eACA,CAAA,0CACA,CAAA,SACA,CAAA,qBAEA,UACE,CAAA,cACA,CAAA,iBACA,CAAA,oBACA,CAAA,aACA,CAAA,2BAGF,wBACE,CAAA,SAMN,wBACE,CAAA,UACA,CAAA,YACA,CAAA,cACA,CAAA,WACA,CAAA,kBACA,CAAA,cACA,CAAA,UAMF,iBACE,CAAA,cAIF,KACE,CAAA,MACA,CAAA,SACA,CAAA,UACA,CAAA,WACA,CAAA,cACA,CAAA,iBACA,CAAA,oBAEF,UACE,CAAA,aACA,CAAA,aACA,CAAA,cACA,CAAA,cACA,CAAA,iBACA,CAAA,iFAEF,UAEE,CAAA,UACA,CAAA,UACA,CAAA,aACA,CAAA,eACA,CAAA,iBACA,CAAA,wBACA,CAAA,gCACA,CAAA,4BAEF,OACE,CAAA,mCAEF,wCACE,CAAA,kCAEF,2CACE,CAAA,oCAEF,kBACE,CAAA,0BAEF,aACE,CAAA,6BAEF,aACE,CAAA,iBACA,CAAA,iBAGF,YACE,CAAA,iBAGF,QACE,CAAA,SACA,CAAA,UACA,CAAA,eACA,CAAA,iBACA,CAAA,KAEF,aACI,CAAA,cACF,CAAA,UACA,CAAA,wBACA,CAAA,6CACA,CAAA,cACA,CAAA,WAGF,wBACE,CAAA,EAGF,oBACE,CAAA,WAQF,WACE,CAAA,YACA,CAAA,qBACA,CAAA,mBAIF,UCxLc,CAAA,WAAA,CAAA,kBACC,CAAA,qBD4Lb,CAAA,sBACA,CAAA,kCACA,CAAA,6BACA,CAAA,mBAGF,KACE,6BACE,CAAA,GAGF,cACE,CAAA,CAAA,oBAIJ,UC7Mc,CAAA,WAAA,CAAA,kBACC,CAAA,qBDiNb,CAAA,mCACA,CAAA,kCACA,CAAA,6BACA,CAAA,gCAIF,KACE,uBACE,CAAA,GAGF,yCACE,CAAA,CAAA,QAIJ,UCnOc,CAAA,WAAA,CAAA,kBACC,CAAA,iBDsOb,CAAA,oBAKF,YACE,CAAA,iBACA,CAAA,wBAGF,iBACE,CAAA,QAGF,qBACE,CAAA,eAKF,YACE,CAAA,mBACA,CAAA,qBAGF,YACE,CAAA,sBAGF,mBACE,CAAA,kCACA,CAAA,iCACA,CAAA,yBACA,CAAA,kBACA,CAAA,WACA",sourcesContent:["@font-face { font-family: custom-I1b806; src:url('!!E:/projects/interexy/project_1/node_modules/iconfont-webpack-plugin/lib/loader.js?{\"svgs\":[\"src/assets/house.svg\"],\"name\":\"custom-I1b806\",\"enforcedSvgHeight\":3000}!~E:/projects/interexy/project_1/node_modules/iconfont-webpack-plugin/placeholder.svg') format('woff');font-weight: normal;font-style: normal;}\r\n\r\n@import 'constants';\r\n\r\n* {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nhtml {\r\n  scroll-behavior: smooth;\r\n}\r\n\r\nbody {\r\n  height: 100%;\r\n\r\n}\r\n\r\n.wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n}\r\n\r\nheader {\r\n  padding: 40px 0;\r\n  width: 100%;\r\n}\r\n\r\n/* Dropdown Button */\r\n\r\n.dropdown {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  max-width: 1050px;\r\n  width: 100%;\r\n  margin: auto;\r\n  padding: 0 15px;\r\n\r\n  &__block {\r\n    position: relative;\r\n    display: inline-block;\r\n    padding: 20px;\r\n  }\r\n\r\n  &__block:hover .dropdown__content {\r\n    display: block;\r\n  }\r\n\r\n  &__block:hover .dropbtn {\r\n    background-color: #854392;\r\n  }\r\n\r\n  &__content {\r\n    display: none;\r\n    position: absolute;\r\n    background-color: #eadcfc;\r\n    min-width: 200px;\r\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\r\n    z-index: 1;\r\n\r\n    & a {\r\n      color: black;\r\n      font-size: 18px;\r\n      padding: 12px 16px;\r\n      text-decoration: none;\r\n      display: block;\r\n    }\r\n\r\n    & a:hover {\r\n      background-color: #da91da;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n.dropbtn {\r\n  background-color: #c993ec;\r\n  color: black;\r\n  padding: 25px;\r\n  font-size: 24px;\r\n  border: none;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n}\r\n\r\n\r\n// Checkbox menu\r\n\r\n.checkbox {\r\n  margin: 150px 15px;\r\n}\r\n\r\n\r\n.burger-input {\r\n  top: 0;\r\n  left: 0;\r\n  opacity: 0;\r\n  width: 100%;\r\n  height: 45px;\r\n  cursor: pointer;\r\n  position: absolute;\r\n}\r\n.burger-input + label {\r\n  width: 30px;\r\n  display: block;\r\n  margin: 0 auto;\r\n  padding: 10px 0;\r\n  cursor: pointer;\r\n  position: relative;\r\n}\r\n.burger-input + label:after, .burger-input + label:before,\r\n.burger-input + label .burger {\r\n  content: '';\r\n  width: 25px;\r\n  height: 4px;\r\n  display: block;\r\n  margin: 3px auto;\r\n  border-radius: 3px;\r\n  background-color: #1c5081;\r\n  transition: all 200ms ease-in-out;\r\n}\r\n.burger-input:checked + label {\r\n  top: 4px;\r\n}\r\n.burger-input:checked + label:before {\r\n  transform: translateY(2px) rotate(135deg);\r\n}\r\n.burger-input:checked + label:after {\r\n  transform: translateY(-12px) rotate(-135deg);\r\n}\r\n.burger-input:checked + label .burger {\r\n  transform: scale(0);\r\n}\r\n.burger-input:checked ~ nav {\r\n  display: block;\r\n}\r\n.burger-input:checked ~ nav li {\r\n  display: block;\r\n  text-align: center;\r\n}\r\n\r\n.checkbox__block {\r\n  display: none;\r\n}\r\n\r\n.checkbox__links {\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 100%;\r\n  list-style: none;\r\n  text-align: center;\r\n}\r\nul a {\r\n    display: block;\r\n  padding: 10px 0;\r\n  color: #ffffff;\r\n  background-color: #6281d8;\r\n  transition: background-color 250ms ease-in-out;\r\n  font-size: 20px;\r\n\r\n}\r\nul a:hover {\r\n  background-color: #7691dd;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n}\r\n\r\n\r\n\r\n\r\n// Animation\r\n\r\n.animation {\r\n  margin: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n\r\n.square__animation {\r\n  width: $square-size;\r\n  height: $square-size;\r\n  background: $square-color;\r\n\r\n  animation-duration: 3s;\r\n  animation-name: slidein;\r\n  animation-iteration-count: infinite;\r\n  animation-direction: alternate;\r\n}\r\n\r\n@keyframes slidein {\r\n  from {\r\n    margin-left: calc(100% - 50px);\r\n  }\r\n\r\n  to {\r\n    margin-left: 0%;\r\n  }\r\n}\r\n\r\n.square__transition {\r\n  width: $square-size;\r\n  height: $square-size;\r\n  background: $square-color;\r\n\r\n  animation-duration: 3s;\r\n  animation-name: transition-animation;\r\n  animation-iteration-count: infinite;\r\n  animation-direction: alternate;\r\n}\r\n\r\n\r\n@keyframes transition-animation {\r\n  from {\r\n    transform: translateX(0);\r\n  }\r\n\r\n  to {\r\n    transform: translateX(calc(100vw - 100px));\r\n  }\r\n}\r\n\r\n.square {\r\n  width: $square-size;\r\n  height: $square-size;\r\n  background: $square-color;\r\n  position: absolute;\r\n\r\n}\r\n\r\n\r\n.square__settimeout {\r\n  height: 120px;\r\n  position: relative\r\n}\r\n\r\n.square-animation-frame {\r\n  position: relative\r\n}\r\n\r\n.button {\r\n  background-color: yellow;\r\n}\r\n\r\n// icons as fonts\r\n\r\n.my-house-link {\r\n  color: orange;\r\n  transition: 2s color;\r\n}\r\n\r\n.my-house-link:hover {\r\n  color: purple;\r\n}\r\n\r\n.my-house-link:before {\r\n  text-rendering: auto;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  font-family: custom-I1b806;\r\n  font-weight: normal;\r\n  content: '\\e000';\r\n}","$square-size: 50px;\r\n$square-color: #d280d8"],sourceRoot:""}]);const d=l},645:n=>{"use strict";n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var A="",e=void 0!==r[5];return r[4]&&(A+="@supports (".concat(r[4],") {")),r[2]&&(A+="@media ".concat(r[2]," {")),e&&(A+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),A+=n(r),e&&(A+="}"),r[2]&&(A+="}"),r[4]&&(A+="}"),A})).join("")},r.i=function(n,A,e,t,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(e)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);e&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),A&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=A):l[2]=A),t&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=t):l[4]="".concat(t)),r.push(l))}},r}},667:n=>{"use strict";n.exports=function(n,r){return r||(r={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),r.hash&&(n+=r.hash),/["'() \t\n]|(%20)/.test(n)||r.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{"use strict";n.exports=function(n){var r=n[1],A=n[3];if(!A)return r;if("function"==typeof btoa){var e=btoa(unescape(encodeURIComponent(JSON.stringify(A)))),t="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(e),o="/*# ".concat(t," */");return[r].concat([o]).join("\n")}return[r].join("\n")}},91:n=>{"use strict";n.exports=function(n,r){return r||(r={}),n?(n=String(n.__esModule?n.default:n),r.hash&&(n+=r.hash),r.maybeNeedQuotes&&/[\t\n\f\r "'=<>`]/.test(n)?'"'.concat(n,'"'):n):n}},704:n=>{n.exports='"data:application/x-font-woff;charset=utf-8;base64,d09GRgABAAAAAARwAAsAAAAABpQAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAADsAAABUIIslek9TLzIAAAFEAAAAQAAAAFZQb1c1Y21hcAAAAYQAAABKAAABcOEoo6pnbHlmAAAB0AAAAN8AAADsKREytmhlYWQAAAKwAAAALgAAADYsVVcJaGhlYQAAAuAAAAAYAAAAJBdaC7tobXR4AAAC+AAAAAgAAAAIC7gAAGxvY2EAAAMAAAAABgAAAAYAdgAAbWF4cAAAAwgAAAAgAAAAIAEPAFVuYW1lAAADKAAAASkAAAIWm5e+CnBvc3QAAARUAAAAGwAAACxqVQEEeJxjYGRgYOBiMGCwY2BycfMJYeDLSSzJY5BiYGGAAJA8MpsxJzM9kYEDxgPKsYBpDiBmg4gCACY7BUgAeJxjYGS9wziBgZWBgb2Aw4SBgXEJhGZdwDCZmY2BgYmBlZkBKwhIc01hOPCA4QED9w6gPj4QCQSMIAIAxdAKRHic7ZCxDYAwEAPPykOBGIEqNbNQsb/YJPkY2CKWzpJPXz2wACU5kwDdiJErrewLm31QfRPDP7T2d+5wo5WZ3X18y796QR0aJglRAAB4nGNgZgAC7oVc5xiUGUwYPBgYGJX4GEUFGfUY2dgZ+RjlmMzMORnlGI2NzO0Y1dQZBU30GJU5GQVFxMXExYwVjczNzM1MBVUVjeSAmkT4GJUVlfQYTQVN7Bg5WRRM5f/OF7O1Ffu1Q0xAQMfaWozlJ8sfQR0xHRUxfn6xf/nypvJ/Un9z6+v5Bcaxm8UF+unp/1JhPAcUBqJ/RmCa65y8mfzfm0yJQCPEfm0Rs7bWATJYfv5mFhRWAfLEGScwt4KU/PnN/bcVbAbYPKbqtfKmCn99IIYxbQE6BgBxXTT6AHicY2BkYGAA4l2aTgvj+W2+MnBz7wCKMDw4zXgYmeZeyHUOSHEwMIF4ADdlCqIAAHicY2BkYODewcAAJxcyMDKgAiYAN+cCNwAAAAALuAAAAAAAAAB2AAAAAQAAAAIASQADAAAAAAACAAAACgAKAAAA/wAAAAAAAHicZZA9bsJAFITHYEgCUoIUKSmzVQoimZ+SA0BPQZfCmLUxsr3WekGiywlyhBwhp4hyghwoY/NoYC0/fzNv3u7KAAb4hYd6ebhtar1auKE6cZv0IOyTn4U76ONFuEt/KNzDG6bCfTzinTt4/h2dAUrhFu7xIdym/ynsk7+EO3jCt3CX/o9wDyv8Cffx6g3TyBSxKdxSJ/sstGd5/q60rVJTqEkwPlsLXWgbOr1R66OqDsnUuVjF1uRqzq7OMqNKa3Y6csHWuXI2GsXiB5HJkSKCQYG4qQ5LaCTYI0MIe9W91CumLSr6tVaYIMD4KrVgqmiSIZXGhsk1jqwVDjxtStcxrfhazuSkucxq3iQjK/7vurejE9EPsG2mSsww4hNf5IPmDvk/PRFeqAAAAHicY2BigAA5BuyAiZGJkZmBKdOAgQEABykAxQA="'},379:n=>{"use strict";var r=[];function A(n){for(var A=-1,e=0;e<r.length;e++)if(r[e].identifier===n){A=e;break}return A}function e(n,e){for(var o={},i=[],a=0;a<n.length;a++){var c=n[a],s=e.base?c[0]+e.base:c[0],l=o[s]||0,u="".concat(s," ").concat(l);o[s]=l+1;var d=A(u),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==d)r[d].references++,r[d].updater(p);else{var C=t(p,e);e.byIndex=a,r.splice(a,0,{identifier:u,updater:C,references:1})}i.push(u)}return i}function t(n,r){var A=r.domAPI(r);return A.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;A.update(n=r)}else A.remove()}}n.exports=function(n,t){var o=e(n=n||[],t=t||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var a=A(o[i]);r[a].references--}for(var c=e(n,t),s=0;s<o.length;s++){var l=A(o[s]);0===r[l].references&&(r[l].updater(),r.splice(l,1))}o=c}}},569:n=>{"use strict";var r={};n.exports=function(n,A){var e=function(n){if(void 0===r[n]){var A=document.querySelector(n);if(window.HTMLIFrameElement&&A instanceof window.HTMLIFrameElement)try{A=A.contentDocument.head}catch(n){A=null}r[n]=A}return r[n]}(n);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(A)}},216:n=>{"use strict";n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,A)=>{"use strict";n.exports=function(n){var r=A.nc;r&&n.setAttribute("nonce",r)}},795:n=>{"use strict";n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var r=n.insertStyleElement(n);return{update:function(A){!function(n,r,A){var e="";A.supports&&(e+="@supports (".concat(A.supports,") {")),A.media&&(e+="@media ".concat(A.media," {"));var t=void 0!==A.layer;t&&(e+="@layer".concat(A.layer.length>0?" ".concat(A.layer):""," {")),e+=A.css,t&&(e+="}"),A.media&&(e+="}"),A.supports&&(e+="}");var o=A.sourceMap;o&&"undefined"!=typeof btoa&&(e+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),r.styleTagTransform(e,n,r.options)}(r,n,A)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{"use strict";n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}},400:(n,r,A)=>{"use strict";n.exports=A.p+"528073c10957861a62e9.css"}},r={};function A(e){var t=r[e];if(void 0!==t)return t.exports;var o=r[e]={id:e,exports:{}};return n[e](o,o.exports,A),o.exports}A.m=n,A.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return A.d(r,{a:r}),r},A.d=(n,r)=>{for(var e in r)A.o(r,e)&&!A.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:r[e]})},A.u=n=>n+".js",A.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),A.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),(()=>{var n;A.g.importScripts&&(n=A.g.location+"");var r=A.g.document;if(!n&&r&&(r.currentScript&&(n=r.currentScript.src),!n)){var e=r.getElementsByTagName("script");if(e.length)for(var t=e.length-1;t>-1&&!n;)n=e[t--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),A.p=n})(),A.b=document.baseURI||self.location.href,A.nc=void 0,(()=>{"use strict";var n=A(91),r=A.n(n),e=new URL(A(400),A.b);r()(e);var t=A(379),o=A.n(t),i=A(795),a=A.n(i),c=A(569),s=A.n(c),l=A(565),u=A.n(l),d=A(216),p=A.n(d),C=A(589),f=A.n(C),g=A(475),m={};m.styleTagTransform=f(),m.setAttributes=u(),m.insert=s().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=p(),o()(g.Z,m),g.Z&&g.Z.locals&&g.Z.locals;var b=0,h=2;!function n(){var r=document.querySelector(".square-animation-frame"),A=document.querySelector(".square-animation-frame > .square");b+=h,A.style.left="".concat(b,"px"),(b>=r.getBoundingClientRect().width-A.getBoundingClientRect().width||b<=0)&&(h*=-1),requestAnimationFrame(n)}();var x=0,y=2,k=document.querySelector(".square__settimeout").getBoundingClientRect().width;function w(n){console.log(n.data)}!function n(){var r=document.querySelector(".square__settimeout > .square"),A=r.getBoundingClientRect().width;x+=y,r.style.left="".concat(x,"px"),(x>=k-A||x<=0)&&(y*=-1),setTimeout(n,6)}(),document.getElementById("button").addEventListener("click",(function(){var n=new Worker(new URL(A.p+A.u(660),A.b)),r=Array.from({length:1e5},(function(){return Math.floor(1e5*Math.random())})),e=Array.from({length:1e5},(function(){return Math.floor(1e5*Math.random())}));n.postMessage({arr1:r,arr2:e}),n.onmessage=w}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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TyxHQUFINUksT0FBTXVJLEVBQVEsT0FFN0JBLEdBQ0tHLEVBQU9HLHdCQUF3QkMsTUFDOUJILEVBQU9FLHdCQUF3QkMsT0FDbENQLEdBQVksS0FFZkMsSUFBYyxHQUVoQk8sc0JBQXNCTixFQUN4QixDQUNBQSxHQUlBLElBQUlPLEVBQXFCLEVBQ3JCQyxFQUFzQixFQUNwQkMsRUFBaUIvRSxTQUNwQkMsY0FBYyx1QkFDZHlFLHdCQUF3QkMsTUFpRDNCLFNBQVNLLEVBQVNDLEdBQ2hCQyxRQUFRQyxJQUFJRixFQUFNdEgsS0FDcEIsRUFqREEsU0FBU3lILElBQ1AsSUFBTVosRUFBU3hFLFNBQVNDLGNBQWMsaUNBQ2hDb0YsRUFBY2IsRUFBT0Usd0JBQXdCQyxNQUNuREUsR0FBc0JDLEVBQ3RCTixFQUFPM0UsTUFBTTRFLEtBQU8sR0FBSDVJLE9BQU1nSixFQUFrQixPQUV2Q0EsR0FBc0JFLEVBQWlCTSxHQUNwQ1IsR0FBc0IsS0FFekJDLElBQXdCLEdBRTFCUSxXQUFXRixFQVphLEVBYTFCLENBQ0FBLEdBWWVwRixTQUFTdUYsZUFBZSxVQUtoQ0MsaUJBQWlCLFNBQVMsV0FDL0IsSUFBTUMsRUFBUyxJQUFJQyxPQUFPLElBQUk1SyxJQUFJLG1CQUU1QjZLLEVBQU9DLE1BQU1DLEtBQ2pCLENBQUUvSixPQUFRLE1BQ1Ysa0JBQU1nSyxLQUFLQyxNQUFzQixJQUFoQkQsS0FBS0UsU0FBa0IsSUFFcENDLEVBQU9MLE1BQU1DLEtBQ2pCLENBQUUvSixPQUFRLE1BQ1Ysa0JBQU1nSyxLQUFLQyxNQUFzQixJQUFoQkQsS0FBS0UsU0FBa0IsSUFHMUNQLEVBQU9TLFlBQVksQ0FBRVAsS0FBQUEsRUFBTU0sS0FBQUEsSUFFM0JSLEVBQU9VLFVBQVluQixDQUNyQixHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvamVjdF8xLy4vc3JjL2Fzc2V0cy9zdHlsZS5zY3NzIiwid2VicGFjazovL3Byb2plY3RfMS8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vcHJvamVjdF8xLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qcyIsIndlYnBhY2s6Ly9wcm9qZWN0XzEvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly9wcm9qZWN0XzEvLi9ub2RlX21vZHVsZXMvaHRtbC1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qcyIsIndlYnBhY2s6Ly9wcm9qZWN0XzEvLi9ub2RlX21vZHVsZXMvaWNvbmZvbnQtd2VicGFjay1wbHVnaW4vcGxhY2Vob2xkZXIuc3ZnIiwid2VicGFjazovL3Byb2plY3RfMS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9wcm9qZWN0XzEvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3Byb2plY3RfMS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9wcm9qZWN0XzEvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vcHJvamVjdF8xLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vcHJvamVjdF8xLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vcHJvamVjdF8xL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3Byb2plY3RfMS93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9wcm9qZWN0XzEvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3Byb2plY3RfMS93ZWJwYWNrL3J1bnRpbWUvZ2V0IGphdmFzY3JpcHQgY2h1bmsgZmlsZW5hbWUiLCJ3ZWJwYWNrOi8vcHJvamVjdF8xL3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vcHJvamVjdF8xL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vcHJvamVjdF8xL3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL3Byb2plY3RfMS93ZWJwYWNrL3J1bnRpbWUvanNvbnAgY2h1bmsgbG9hZGluZyIsIndlYnBhY2s6Ly9wcm9qZWN0XzEvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL3Byb2plY3RfMS8uL3B1YmxpYy9pbmRleC5odG1sIiwid2VicGFjazovL3Byb2plY3RfMS8uL3NyYy9hc3NldHMvc3R5bGUuc2Nzcz8zMTgwIiwid2VicGFjazovL3Byb2plY3RfMS8uL3NyYy9hcHAvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fID0gbmV3IFVSTChcIiEhRTovcHJvamVjdHMvaW50ZXJleHkvcHJvamVjdF8xL25vZGVfbW9kdWxlcy9pY29uZm9udC13ZWJwYWNrLXBsdWdpbi9saWIvbG9hZGVyLmpzP3tcXFwic3Znc1xcXCI6W1xcXCJzcmMvYXNzZXRzL2hvdXNlLnN2Z1xcXCJdLFxcXCJuYW1lXFxcIjpcXFwiY3VzdG9tLUkxYjgwNlxcXCIsXFxcImVuZm9yY2VkU3ZnSGVpZ2h0XFxcIjozMDAwfSFFOi9wcm9qZWN0cy9pbnRlcmV4eS9wcm9qZWN0XzEvbm9kZV9tb2R1bGVzL2ljb25mb250LXdlYnBhY2stcGx1Z2luL3BsYWNlaG9sZGVyLnN2Z1wiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgQGZvbnQtZmFjZXtmb250LWZhbWlseTpjdXN0b20tSTFiODA2O3NyYzp1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19ffSkgZm9ybWF0KFwid29mZlwiKTtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWx9Kntib3gtc2l6aW5nOmJvcmRlci1ib3g7bWFyZ2luOjA7cGFkZGluZzowfWh0bWx7c2Nyb2xsLWJlaGF2aW9yOnNtb290aH1ib2R5e2hlaWdodDoxMDAlfS53cmFwcGVye2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW47bWluLWhlaWdodDoxMDB2aH1oZWFkZXJ7cGFkZGluZzo0MHB4IDA7d2lkdGg6MTAwJX0uZHJvcGRvd257ZGlzcGxheTpmbGV4O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuO2FsaWduLWl0ZW1zOmNlbnRlcjttYXgtd2lkdGg6MTA1MHB4O3dpZHRoOjEwMCU7bWFyZ2luOmF1dG87cGFkZGluZzowIDE1cHh9LmRyb3Bkb3duX19ibG9ja3twb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5OmlubGluZS1ibG9jaztwYWRkaW5nOjIwcHh9LmRyb3Bkb3duX19ibG9jazpob3ZlciAuZHJvcGRvd25fX2NvbnRlbnR7ZGlzcGxheTpibG9ja30uZHJvcGRvd25fX2Jsb2NrOmhvdmVyIC5kcm9wYnRue2JhY2tncm91bmQtY29sb3I6Izg1NDM5Mn0uZHJvcGRvd25fX2NvbnRlbnR7ZGlzcGxheTpub25lO3Bvc2l0aW9uOmFic29sdXRlO2JhY2tncm91bmQtY29sb3I6I2VhZGNmYzttaW4td2lkdGg6MjAwcHg7Ym94LXNoYWRvdzowcHggOHB4IDE2cHggMHB4IHJnYmEoMCwwLDAsLjIpO3otaW5kZXg6MX0uZHJvcGRvd25fX2NvbnRlbnQgYXtjb2xvcjojMDAwO2ZvbnQtc2l6ZToxOHB4O3BhZGRpbmc6MTJweCAxNnB4O3RleHQtZGVjb3JhdGlvbjpub25lO2Rpc3BsYXk6YmxvY2t9LmRyb3Bkb3duX19jb250ZW50IGE6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZGE5MWRhfS5kcm9wYnRue2JhY2tncm91bmQtY29sb3I6I2M5OTNlYztjb2xvcjojMDAwO3BhZGRpbmc6MjVweDtmb250LXNpemU6MjRweDtib3JkZXI6bm9uZTtib3JkZXItcmFkaXVzOjIwcHg7Y3Vyc29yOnBvaW50ZXJ9LmNoZWNrYm94e21hcmdpbjoxNTBweCAxNXB4fS5idXJnZXItaW5wdXR7dG9wOjA7bGVmdDowO29wYWNpdHk6MDt3aWR0aDoxMDAlO2hlaWdodDo0NXB4O2N1cnNvcjpwb2ludGVyO3Bvc2l0aW9uOmFic29sdXRlfS5idXJnZXItaW5wdXQrbGFiZWx7d2lkdGg6MzBweDtkaXNwbGF5OmJsb2NrO21hcmdpbjowIGF1dG87cGFkZGluZzoxMHB4IDA7Y3Vyc29yOnBvaW50ZXI7cG9zaXRpb246cmVsYXRpdmV9LmJ1cmdlci1pbnB1dCtsYWJlbDphZnRlciwuYnVyZ2VyLWlucHV0K2xhYmVsOmJlZm9yZSwuYnVyZ2VyLWlucHV0K2xhYmVsIC5idXJnZXJ7Y29udGVudDpcIlwiO3dpZHRoOjI1cHg7aGVpZ2h0OjRweDtkaXNwbGF5OmJsb2NrO21hcmdpbjozcHggYXV0bztib3JkZXItcmFkaXVzOjNweDtiYWNrZ3JvdW5kLWNvbG9yOiMxYzUwODE7dHJhbnNpdGlvbjphbGwgMjAwbXMgZWFzZS1pbi1vdXR9LmJ1cmdlci1pbnB1dDpjaGVja2VkK2xhYmVse3RvcDo0cHh9LmJ1cmdlci1pbnB1dDpjaGVja2VkK2xhYmVsOmJlZm9yZXt0cmFuc2Zvcm06dHJhbnNsYXRlWSgycHgpIHJvdGF0ZSgxMzVkZWcpfS5idXJnZXItaW5wdXQ6Y2hlY2tlZCtsYWJlbDphZnRlcnt0cmFuc2Zvcm06dHJhbnNsYXRlWSgtMTJweCkgcm90YXRlKC0xMzVkZWcpfS5idXJnZXItaW5wdXQ6Y2hlY2tlZCtsYWJlbCAuYnVyZ2Vye3RyYW5zZm9ybTpzY2FsZSgwKX0uYnVyZ2VyLWlucHV0OmNoZWNrZWR+bmF2e2Rpc3BsYXk6YmxvY2t9LmJ1cmdlci1pbnB1dDpjaGVja2Vkfm5hdiBsaXtkaXNwbGF5OmJsb2NrO3RleHQtYWxpZ246Y2VudGVyfS5jaGVja2JveF9fYmxvY2t7ZGlzcGxheTpub25lfS5jaGVja2JveF9fbGlua3N7bWFyZ2luOjA7cGFkZGluZzowO3dpZHRoOjEwMCU7bGlzdC1zdHlsZTpub25lO3RleHQtYWxpZ246Y2VudGVyfXVsIGF7ZGlzcGxheTpibG9jaztwYWRkaW5nOjEwcHggMDtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzYyODFkODt0cmFuc2l0aW9uOmJhY2tncm91bmQtY29sb3IgMjUwbXMgZWFzZS1pbi1vdXQ7Zm9udC1zaXplOjIwcHh9dWwgYTpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiM3NjkxZGR9YXt0ZXh0LWRlY29yYXRpb246bm9uZX0uYW5pbWF0aW9ue21hcmdpbjoyMHB4O2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpjb2x1bW59LnNxdWFyZV9fYW5pbWF0aW9ue3dpZHRoOjUwcHg7aGVpZ2h0OjUwcHg7YmFja2dyb3VuZDojZDI4MGQ4O2FuaW1hdGlvbi1kdXJhdGlvbjozczthbmltYXRpb24tbmFtZTpzbGlkZWluO2FuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6aW5maW5pdGU7YW5pbWF0aW9uLWRpcmVjdGlvbjphbHRlcm5hdGV9QGtleWZyYW1lcyBzbGlkZWlue2Zyb217bWFyZ2luLWxlZnQ6Y2FsYygxMDAlIC0gNTBweCl9dG97bWFyZ2luLWxlZnQ6MCV9fS5zcXVhcmVfX3RyYW5zaXRpb257d2lkdGg6NTBweDtoZWlnaHQ6NTBweDtiYWNrZ3JvdW5kOiNkMjgwZDg7YW5pbWF0aW9uLWR1cmF0aW9uOjNzO2FuaW1hdGlvbi1uYW1lOnRyYW5zaXRpb24tYW5pbWF0aW9uO2FuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6aW5maW5pdGU7YW5pbWF0aW9uLWRpcmVjdGlvbjphbHRlcm5hdGV9QGtleWZyYW1lcyB0cmFuc2l0aW9uLWFuaW1hdGlvbntmcm9te3RyYW5zZm9ybTp0cmFuc2xhdGVYKDApfXRve3RyYW5zZm9ybTp0cmFuc2xhdGVYKGNhbGMoMTAwdncgLSAxMDBweCkpfX0uc3F1YXJle3dpZHRoOjUwcHg7aGVpZ2h0OjUwcHg7YmFja2dyb3VuZDojZDI4MGQ4O3Bvc2l0aW9uOmFic29sdXRlfS5zcXVhcmVfX3NldHRpbWVvdXR7aGVpZ2h0OjEyMHB4O3Bvc2l0aW9uOnJlbGF0aXZlfS5zcXVhcmUtYW5pbWF0aW9uLWZyYW1le3Bvc2l0aW9uOnJlbGF0aXZlfS5idXR0b257YmFja2dyb3VuZC1jb2xvcjojZmYwfS5teS1ob3VzZS1saW5re2NvbG9yOm9yYW5nZTt0cmFuc2l0aW9uOjJzIGNvbG9yfS5teS1ob3VzZS1saW5rOmhvdmVye2NvbG9yOnB1cnBsZX0ubXktaG91c2UtbGluazpiZWZvcmV7dGV4dC1yZW5kZXJpbmc6YXV0bzstd2Via2l0LWZvbnQtc21vb3RoaW5nOmFudGlhbGlhc2VkOy1tb3otb3N4LWZvbnQtc21vb3RoaW5nOmdyYXlzY2FsZTtmb250LWZhbWlseTpjdXN0b20tSTFiODA2O2ZvbnQtd2VpZ2h0Om5vcm1hbDtjb250ZW50Olwi7oCAXCJ9YCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvYXNzZXRzL3N0eWxlLnNjc3NcIixcIndlYnBhY2s6Ly8uL3NyYy9hc3NldHMvX2NvbnN0YW50cy5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBLFdBQUEseUJBQUEsQ0FBQSwwREFBQSxDQUFBLGtCQUFBLENBQUEsaUJBQUEsQ0FBQSxFQUlBLHFCQUNFLENBQUEsUUFDQSxDQUFBLFNBQ0EsQ0FBQSxLQUdGLHNCQUNFLENBQUEsS0FHRixXQUNFLENBQUEsU0FJRixZQUNFLENBQUEscUJBQ0EsQ0FBQSxnQkFDQSxDQUFBLE9BR0YsY0FDRSxDQUFBLFVBQ0EsQ0FBQSxVQUtGLFlBQ0UsQ0FBQSw2QkFDQSxDQUFBLGtCQUNBLENBQUEsZ0JBQ0EsQ0FBQSxVQUNBLENBQUEsV0FDQSxDQUFBLGNBQ0EsQ0FBQSxpQkFFQSxpQkFDRSxDQUFBLG9CQUNBLENBQUEsWUFDQSxDQUFBLDBDQUdGLGFBQ0UsQ0FBQSxnQ0FHRix3QkFDRSxDQUFBLG1CQUdGLFlBQ0UsQ0FBQSxpQkFDQSxDQUFBLHdCQUNBLENBQUEsZUFDQSxDQUFBLDBDQUNBLENBQUEsU0FDQSxDQUFBLHFCQUVBLFVBQ0UsQ0FBQSxjQUNBLENBQUEsaUJBQ0EsQ0FBQSxvQkFDQSxDQUFBLGFBQ0EsQ0FBQSwyQkFHRix3QkFDRSxDQUFBLFNBTU4sd0JBQ0UsQ0FBQSxVQUNBLENBQUEsWUFDQSxDQUFBLGNBQ0EsQ0FBQSxXQUNBLENBQUEsa0JBQ0EsQ0FBQSxjQUNBLENBQUEsVUFNRixpQkFDRSxDQUFBLGNBSUYsS0FDRSxDQUFBLE1BQ0EsQ0FBQSxTQUNBLENBQUEsVUFDQSxDQUFBLFdBQ0EsQ0FBQSxjQUNBLENBQUEsaUJBQ0EsQ0FBQSxvQkFFRixVQUNFLENBQUEsYUFDQSxDQUFBLGFBQ0EsQ0FBQSxjQUNBLENBQUEsY0FDQSxDQUFBLGlCQUNBLENBQUEsaUZBRUYsVUFFRSxDQUFBLFVBQ0EsQ0FBQSxVQUNBLENBQUEsYUFDQSxDQUFBLGVBQ0EsQ0FBQSxpQkFDQSxDQUFBLHdCQUNBLENBQUEsZ0NBQ0EsQ0FBQSw0QkFFRixPQUNFLENBQUEsbUNBRUYsd0NBQ0UsQ0FBQSxrQ0FFRiwyQ0FDRSxDQUFBLG9DQUVGLGtCQUNFLENBQUEsMEJBRUYsYUFDRSxDQUFBLDZCQUVGLGFBQ0UsQ0FBQSxpQkFDQSxDQUFBLGlCQUdGLFlBQ0UsQ0FBQSxpQkFHRixRQUNFLENBQUEsU0FDQSxDQUFBLFVBQ0EsQ0FBQSxlQUNBLENBQUEsaUJBQ0EsQ0FBQSxLQUVGLGFBQ0ksQ0FBQSxjQUNGLENBQUEsVUFDQSxDQUFBLHdCQUNBLENBQUEsNkNBQ0EsQ0FBQSxjQUNBLENBQUEsV0FHRix3QkFDRSxDQUFBLEVBR0Ysb0JBQ0UsQ0FBQSxXQVFGLFdBQ0UsQ0FBQSxZQUNBLENBQUEscUJBQ0EsQ0FBQSxtQkFJRixVQ3hMYyxDQUFBLFdBQUEsQ0FBQSxrQkFDQyxDQUFBLHFCRDRMYixDQUFBLHNCQUNBLENBQUEsa0NBQ0EsQ0FBQSw2QkFDQSxDQUFBLG1CQUdGLEtBQ0UsNkJBQ0UsQ0FBQSxHQUdGLGNBQ0UsQ0FBQSxDQUFBLG9CQUlKLFVDN01jLENBQUEsV0FBQSxDQUFBLGtCQUNDLENBQUEscUJEaU5iLENBQUEsbUNBQ0EsQ0FBQSxrQ0FDQSxDQUFBLDZCQUNBLENBQUEsZ0NBSUYsS0FDRSx1QkFDRSxDQUFBLEdBR0YseUNBQ0UsQ0FBQSxDQUFBLFFBSUosVUNuT2MsQ0FBQSxXQUFBLENBQUEsa0JBQ0MsQ0FBQSxpQkRzT2IsQ0FBQSxvQkFLRixZQUNFLENBQUEsaUJBQ0EsQ0FBQSx3QkFHRixpQkFDRSxDQUFBLFFBR0YscUJBQ0UsQ0FBQSxlQUtGLFlBQ0UsQ0FBQSxtQkFDQSxDQUFBLHFCQUdGLFlBQ0UsQ0FBQSxzQkFHRixtQkFDRSxDQUFBLGtDQUNBLENBQUEsaUNBQ0EsQ0FBQSx5QkFDQSxDQUFBLGtCQUNBLENBQUEsV0FDQVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAZm9udC1mYWNlIHsgZm9udC1mYW1pbHk6IGN1c3RvbS1JMWI4MDY7IHNyYzp1cmwoJyEhRTovcHJvamVjdHMvaW50ZXJleHkvcHJvamVjdF8xL25vZGVfbW9kdWxlcy9pY29uZm9udC13ZWJwYWNrLXBsdWdpbi9saWIvbG9hZGVyLmpzP3tcXFwic3Znc1xcXCI6W1xcXCJzcmMvYXNzZXRzL2hvdXNlLnN2Z1xcXCJdLFxcXCJuYW1lXFxcIjpcXFwiY3VzdG9tLUkxYjgwNlxcXCIsXFxcImVuZm9yY2VkU3ZnSGVpZ2h0XFxcIjozMDAwfSF+RTovcHJvamVjdHMvaW50ZXJleHkvcHJvamVjdF8xL25vZGVfbW9kdWxlcy9pY29uZm9udC13ZWJwYWNrLXBsdWdpbi9wbGFjZWhvbGRlci5zdmcnKSBmb3JtYXQoJ3dvZmYnKTtmb250LXdlaWdodDogbm9ybWFsO2ZvbnQtc3R5bGU6IG5vcm1hbDt9XFxyXFxuXFxyXFxuQGltcG9ydCAnY29uc3RhbnRzJztcXHJcXG5cXHJcXG4qIHtcXHJcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxyXFxuICBtYXJnaW46IDA7XFxyXFxuICBwYWRkaW5nOiAwO1xcclxcbn1cXHJcXG5cXHJcXG5odG1sIHtcXHJcXG4gIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoO1xcclxcbn1cXHJcXG5cXHJcXG5ib2R5IHtcXHJcXG4gIGhlaWdodDogMTAwJTtcXHJcXG5cXHJcXG59XFxyXFxuXFxyXFxuLndyYXBwZXIge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICBtaW4taGVpZ2h0OiAxMDB2aDtcXHJcXG59XFxyXFxuXFxyXFxuaGVhZGVyIHtcXHJcXG4gIHBhZGRpbmc6IDQwcHggMDtcXHJcXG4gIHdpZHRoOiAxMDAlO1xcclxcbn1cXHJcXG5cXHJcXG4vKiBEcm9wZG93biBCdXR0b24gKi9cXHJcXG5cXHJcXG4uZHJvcGRvd24ge1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICBtYXgtd2lkdGg6IDEwNTBweDtcXHJcXG4gIHdpZHRoOiAxMDAlO1xcclxcbiAgbWFyZ2luOiBhdXRvO1xcclxcbiAgcGFkZGluZzogMCAxNXB4O1xcclxcblxcclxcbiAgJl9fYmxvY2sge1xcclxcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXHJcXG4gICAgcGFkZGluZzogMjBweDtcXHJcXG4gIH1cXHJcXG5cXHJcXG4gICZfX2Jsb2NrOmhvdmVyIC5kcm9wZG93bl9fY29udGVudCB7XFxyXFxuICAgIGRpc3BsYXk6IGJsb2NrO1xcclxcbiAgfVxcclxcblxcclxcbiAgJl9fYmxvY2s6aG92ZXIgLmRyb3BidG4ge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjODU0MzkyO1xcclxcbiAgfVxcclxcblxcclxcbiAgJl9fY29udGVudCB7XFxyXFxuICAgIGRpc3BsYXk6IG5vbmU7XFxyXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VhZGNmYztcXHJcXG4gICAgbWluLXdpZHRoOiAyMDBweDtcXHJcXG4gICAgYm94LXNoYWRvdzogMHB4IDhweCAxNnB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMik7XFxyXFxuICAgIHotaW5kZXg6IDE7XFxyXFxuXFxyXFxuICAgICYgYSB7XFxyXFxuICAgICAgY29sb3I6IGJsYWNrO1xcclxcbiAgICAgIGZvbnQtc2l6ZTogMThweDtcXHJcXG4gICAgICBwYWRkaW5nOiAxMnB4IDE2cHg7XFxyXFxuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xcclxcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xcclxcbiAgICB9XFxyXFxuXFxyXFxuICAgICYgYTpob3ZlciB7XFxyXFxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2RhOTFkYTtcXHJcXG4gICAgfVxcclxcbiAgfVxcclxcblxcclxcbn1cXHJcXG5cXHJcXG4uZHJvcGJ0biB7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzk5M2VjO1xcclxcbiAgY29sb3I6IGJsYWNrO1xcclxcbiAgcGFkZGluZzogMjVweDtcXHJcXG4gIGZvbnQtc2l6ZTogMjRweDtcXHJcXG4gIGJvcmRlcjogbm9uZTtcXHJcXG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XFxyXFxuICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxufVxcclxcblxcclxcblxcclxcbi8vIENoZWNrYm94IG1lbnVcXHJcXG5cXHJcXG4uY2hlY2tib3gge1xcclxcbiAgbWFyZ2luOiAxNTBweCAxNXB4O1xcclxcbn1cXHJcXG5cXHJcXG5cXHJcXG4uYnVyZ2VyLWlucHV0IHtcXHJcXG4gIHRvcDogMDtcXHJcXG4gIGxlZnQ6IDA7XFxyXFxuICBvcGFjaXR5OiAwO1xcclxcbiAgd2lkdGg6IDEwMCU7XFxyXFxuICBoZWlnaHQ6IDQ1cHg7XFxyXFxuICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxufVxcclxcbi5idXJnZXItaW5wdXQgKyBsYWJlbCB7XFxyXFxuICB3aWR0aDogMzBweDtcXHJcXG4gIGRpc3BsYXk6IGJsb2NrO1xcclxcbiAgbWFyZ2luOiAwIGF1dG87XFxyXFxuICBwYWRkaW5nOiAxMHB4IDA7XFxyXFxuICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxufVxcclxcbi5idXJnZXItaW5wdXQgKyBsYWJlbDphZnRlciwgLmJ1cmdlci1pbnB1dCArIGxhYmVsOmJlZm9yZSxcXHJcXG4uYnVyZ2VyLWlucHV0ICsgbGFiZWwgLmJ1cmdlciB7XFxyXFxuICBjb250ZW50OiAnJztcXHJcXG4gIHdpZHRoOiAyNXB4O1xcclxcbiAgaGVpZ2h0OiA0cHg7XFxyXFxuICBkaXNwbGF5OiBibG9jaztcXHJcXG4gIG1hcmdpbjogM3B4IGF1dG87XFxyXFxuICBib3JkZXItcmFkaXVzOiAzcHg7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWM1MDgxO1xcclxcbiAgdHJhbnNpdGlvbjogYWxsIDIwMG1zIGVhc2UtaW4tb3V0O1xcclxcbn1cXHJcXG4uYnVyZ2VyLWlucHV0OmNoZWNrZWQgKyBsYWJlbCB7XFxyXFxuICB0b3A6IDRweDtcXHJcXG59XFxyXFxuLmJ1cmdlci1pbnB1dDpjaGVja2VkICsgbGFiZWw6YmVmb3JlIHtcXHJcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgycHgpIHJvdGF0ZSgxMzVkZWcpO1xcclxcbn1cXHJcXG4uYnVyZ2VyLWlucHV0OmNoZWNrZWQgKyBsYWJlbDphZnRlciB7XFxyXFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTEycHgpIHJvdGF0ZSgtMTM1ZGVnKTtcXHJcXG59XFxyXFxuLmJ1cmdlci1pbnB1dDpjaGVja2VkICsgbGFiZWwgLmJ1cmdlciB7XFxyXFxuICB0cmFuc2Zvcm06IHNjYWxlKDApO1xcclxcbn1cXHJcXG4uYnVyZ2VyLWlucHV0OmNoZWNrZWQgfiBuYXYge1xcclxcbiAgZGlzcGxheTogYmxvY2s7XFxyXFxufVxcclxcbi5idXJnZXItaW5wdXQ6Y2hlY2tlZCB+IG5hdiBsaSB7XFxyXFxuICBkaXNwbGF5OiBibG9jaztcXHJcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuLmNoZWNrYm94X19ibG9jayB7XFxyXFxuICBkaXNwbGF5OiBub25lO1xcclxcbn1cXHJcXG5cXHJcXG4uY2hlY2tib3hfX2xpbmtzIHtcXHJcXG4gIG1hcmdpbjogMDtcXHJcXG4gIHBhZGRpbmc6IDA7XFxyXFxuICB3aWR0aDogMTAwJTtcXHJcXG4gIGxpc3Qtc3R5bGU6IG5vbmU7XFxyXFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxufVxcclxcbnVsIGEge1xcclxcbiAgICBkaXNwbGF5OiBibG9jaztcXHJcXG4gIHBhZGRpbmc6IDEwcHggMDtcXHJcXG4gIGNvbG9yOiAjZmZmZmZmO1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogIzYyODFkODtcXHJcXG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMjUwbXMgZWFzZS1pbi1vdXQ7XFxyXFxuICBmb250LXNpemU6IDIwcHg7XFxyXFxuXFxyXFxufVxcclxcbnVsIGE6aG92ZXIge1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogIzc2OTFkZDtcXHJcXG59XFxyXFxuXFxyXFxuYSB7XFxyXFxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XFxyXFxufVxcclxcblxcclxcblxcclxcblxcclxcblxcclxcbi8vIEFuaW1hdGlvblxcclxcblxcclxcbi5hbmltYXRpb24ge1xcclxcbiAgbWFyZ2luOiAyMHB4O1xcclxcbiAgZGlzcGxheTogZmxleDtcXHJcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxufVxcclxcblxcclxcblxcclxcbi5zcXVhcmVfX2FuaW1hdGlvbiB7XFxyXFxuICB3aWR0aDogJHNxdWFyZS1zaXplO1xcclxcbiAgaGVpZ2h0OiAkc3F1YXJlLXNpemU7XFxyXFxuICBiYWNrZ3JvdW5kOiAkc3F1YXJlLWNvbG9yO1xcclxcblxcclxcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAzcztcXHJcXG4gIGFuaW1hdGlvbi1uYW1lOiBzbGlkZWluO1xcclxcbiAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogaW5maW5pdGU7XFxyXFxuICBhbmltYXRpb24tZGlyZWN0aW9uOiBhbHRlcm5hdGU7XFxyXFxufVxcclxcblxcclxcbkBrZXlmcmFtZXMgc2xpZGVpbiB7XFxyXFxuICBmcm9tIHtcXHJcXG4gICAgbWFyZ2luLWxlZnQ6IGNhbGMoMTAwJSAtIDUwcHgpO1xcclxcbiAgfVxcclxcblxcclxcbiAgdG8ge1xcclxcbiAgICBtYXJnaW4tbGVmdDogMCU7XFxyXFxuICB9XFxyXFxufVxcclxcblxcclxcbi5zcXVhcmVfX3RyYW5zaXRpb24ge1xcclxcbiAgd2lkdGg6ICRzcXVhcmUtc2l6ZTtcXHJcXG4gIGhlaWdodDogJHNxdWFyZS1zaXplO1xcclxcbiAgYmFja2dyb3VuZDogJHNxdWFyZS1jb2xvcjtcXHJcXG5cXHJcXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogM3M7XFxyXFxuICBhbmltYXRpb24tbmFtZTogdHJhbnNpdGlvbi1hbmltYXRpb247XFxyXFxuICBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiBpbmZpbml0ZTtcXHJcXG4gIGFuaW1hdGlvbi1kaXJlY3Rpb246IGFsdGVybmF0ZTtcXHJcXG59XFxyXFxuXFxyXFxuXFxyXFxuQGtleWZyYW1lcyB0cmFuc2l0aW9uLWFuaW1hdGlvbiB7XFxyXFxuICBmcm9tIHtcXHJcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xcclxcbiAgfVxcclxcblxcclxcbiAgdG8ge1xcclxcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoY2FsYygxMDB2dyAtIDEwMHB4KSk7XFxyXFxuICB9XFxyXFxufVxcclxcblxcclxcbi5zcXVhcmUge1xcclxcbiAgd2lkdGg6ICRzcXVhcmUtc2l6ZTtcXHJcXG4gIGhlaWdodDogJHNxdWFyZS1zaXplO1xcclxcbiAgYmFja2dyb3VuZDogJHNxdWFyZS1jb2xvcjtcXHJcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG5cXHJcXG59XFxyXFxuXFxyXFxuXFxyXFxuLnNxdWFyZV9fc2V0dGltZW91dCB7XFxyXFxuICBoZWlnaHQ6IDEyMHB4O1xcclxcbiAgcG9zaXRpb246IHJlbGF0aXZlXFxyXFxufVxcclxcblxcclxcbi5zcXVhcmUtYW5pbWF0aW9uLWZyYW1lIHtcXHJcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZVxcclxcbn1cXHJcXG5cXHJcXG4uYnV0dG9uIHtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcXHJcXG59XFxyXFxuXFxyXFxuLy8gaWNvbnMgYXMgZm9udHNcXHJcXG5cXHJcXG4ubXktaG91c2UtbGluayB7XFxyXFxuICBjb2xvcjogb3JhbmdlO1xcclxcbiAgdHJhbnNpdGlvbjogMnMgY29sb3I7XFxyXFxufVxcclxcblxcclxcbi5teS1ob3VzZS1saW5rOmhvdmVyIHtcXHJcXG4gIGNvbG9yOiBwdXJwbGU7XFxyXFxufVxcclxcblxcclxcbi5teS1ob3VzZS1saW5rOmJlZm9yZSB7XFxyXFxuICB0ZXh0LXJlbmRlcmluZzogYXV0bztcXHJcXG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xcclxcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcXHJcXG4gIGZvbnQtZmFtaWx5OiBjdXN0b20tSTFiODA2O1xcclxcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcXHJcXG4gIGNvbnRlbnQ6ICdcXFxcZTAwMCc7XFxyXFxufVwiLFwiJHNxdWFyZS1zaXplOiA1MHB4O1xcclxcbiRzcXVhcmUtY29sb3I6ICNkMjgwZDhcIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXJsLCBvcHRpb25zKSB7XG4gIGlmICghb3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuICBpZiAoIXVybCkge1xuICAgIHJldHVybiB1cmw7XG4gIH1cbiAgdXJsID0gU3RyaW5nKHVybC5fX2VzTW9kdWxlID8gdXJsLmRlZmF1bHQgOiB1cmwpO1xuXG4gIC8vIElmIHVybCBpcyBhbHJlYWR5IHdyYXBwZWQgaW4gcXVvdGVzLCByZW1vdmUgdGhlbVxuICBpZiAoL15bJ1wiXS4qWydcIl0kLy50ZXN0KHVybCkpIHtcbiAgICB1cmwgPSB1cmwuc2xpY2UoMSwgLTEpO1xuICB9XG4gIGlmIChvcHRpb25zLmhhc2gpIHtcbiAgICB1cmwgKz0gb3B0aW9ucy5oYXNoO1xuICB9XG5cbiAgLy8gU2hvdWxkIHVybCBiZSB3cmFwcGVkP1xuICAvLyBTZWUgaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy12YWx1ZXMtMy8jdXJsc1xuICBpZiAoL1tcIicoKSBcXHRcXG5dfCglMjApLy50ZXN0KHVybCkgfHwgb3B0aW9ucy5uZWVkUXVvdGVzKSB7XG4gICAgcmV0dXJuIFwiXFxcIlwiLmNvbmNhdCh1cmwucmVwbGFjZSgvXCIvZywgJ1xcXFxcIicpLnJlcGxhY2UoL1xcbi9nLCBcIlxcXFxuXCIpLCBcIlxcXCJcIik7XG4gIH1cbiAgcmV0dXJuIHVybDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXJsLCBvcHRpb25zKSB7XG4gIGlmICghb3B0aW9ucykge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgIG9wdGlvbnMgPSB7fTtcbiAgfVxuXG4gIGlmICghdXJsKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZXJzY29yZS1kYW5nbGUsIG5vLXBhcmFtLXJlYXNzaWduXG5cblxuICB1cmwgPSBTdHJpbmcodXJsLl9fZXNNb2R1bGUgPyB1cmwuZGVmYXVsdCA6IHVybCk7XG5cbiAgaWYgKG9wdGlvbnMuaGFzaCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgIHVybCArPSBvcHRpb25zLmhhc2g7XG4gIH1cblxuICBpZiAob3B0aW9ucy5tYXliZU5lZWRRdW90ZXMgJiYgL1tcXHRcXG5cXGZcXHIgXCInPTw+YF0vLnRlc3QodXJsKSkge1xuICAgIHJldHVybiBcIlxcXCJcIi5jb25jYXQodXJsLCBcIlxcXCJcIik7XG4gIH1cblxuICByZXR1cm4gdXJsO1xufTsiLCJtb2R1bGUuZXhwb3J0cz1cIlxcXCJkYXRhOmFwcGxpY2F0aW9uL3gtZm9udC13b2ZmO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LGQwOUdSZ0FCQUFBQUFBUndBQXNBQUFBQUJwUUFBUUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCSFUxVkNBQUFCQ0FBQUFEc0FBQUJVSUlzbGVrOVRMeklBQUFGRUFBQUFRQUFBQUZaUWIxYzFZMjFoY0FBQUFZUUFBQUJLQUFBQmNPRW9vNnBuYkhsbUFBQUIwQUFBQU44QUFBRHNLUkV5dG1obFlXUUFBQUt3QUFBQUxnQUFBRFlzVlZjSmFHaGxZUUFBQXVBQUFBQVlBQUFBSkJkYUM3dG9iWFI0QUFBQytBQUFBQWdBQUFBSUM3Z0FBR3h2WTJFQUFBTUFBQUFBQmdBQUFBWUFkZ0FBYldGNGNBQUFBd2dBQUFBZ0FBQUFJQUVQQUZWdVlXMWxBQUFES0FBQUFTa0FBQUlXbTVlK0NuQnZjM1FBQUFSVUFBQUFHd0FBQUN4cVZRRUVlSnhqWUdSZ1lPQmlNR0N3WTJCeWNmTUpZZURMU1N6Slk1QmlZR0dBQUpBOE1wc3hKek05a1lFRHhnUEtzWUJwRGlCbWc0Z0NBQ1k3QlVnQWVKeGpZR1M5d3ppQmdaV0JnYjJBdzRTQmdYRUpoR1pkd0RDWm1ZMkJnWW1CbFprQkt3aEljMDFoT1BDQTRRRUQ5dzZnUGo0UUNRU01JQUlBeGRBS1JIaWM3WkN4RFlBd0VBUFB5a09CR0lFcU5iTlFzYi9ZSlBrWTJDS1d6cEpQWHoyd0FDVTVrd0RkaUpFcnJld0xtMzFRZlJQRFA3VDJkKzV3bzVXWjNYMTh5Nzk2UVIwYUpnbFJBQUI0bkdOZ1pnQUM3b1ZjNXhpVUdVd1lQQmdZR0pYNEdFVUZHZlVZMmRnWitSamxtTXpNT1JubEdJMk56TzBZMWRRWkJVMzBHSlU1R1FWRnhNWEV4WXdWamN6TnpNMU1CVlVWamVTQW1rVDRHSlVWbGZRWVRRVk43Qmc1V1JSTTVmL09GN08xRmZ1MVEweEFRTWZhV296bEo4c2ZRUjB4SFJVeGZuNnhmL255cHZKL1VuOXo2K3Y1QmNheG04VUYrdW5wLzFKaFBBY1VCcUovUm1DYTY1eThtZnpmbTB5SlFDUEVmbTBSczdiV0FUSllmdjVtRmhSV0FmTEVHU2N3dDRLVS9Qbk4vYmNWYkFiWVBLYnF0ZkttQ245OUlJWXhiUUU2QmdCeFhUVDZBSGljWTJCa1lHQUE0bDJhVGd2aitXMitNbkJ6N3dDS01EdzR6WGdZbWVaZXlIVU9TSEV3TUlGNEFEZGxDcUlBQUhpY1kyQmtZT0Rld2NBQUp4Y3lNREtnQWlZQU4rY0NOd0FBQUFBTHVBQUFBQUFBQUFCMkFBQUFBUUFBQUFJQVNRQURBQUFBQUFBQ0FBQUFDZ0FLQUFBQS93QUFBQUFBQUhpY1paQTlic0pBRklUSFlFZ0NVb0lVS1NtelZRb2ltWitTQTBCUFFaZkNtTFV4c3IzV2VrR2l5d2x5aEJ3aHA0aHlnaHdvWS9Ob1lDMC9mek52M3U3S0FBYjRoWWQ2ZWJodGFyMWF1S0U2Y1p2MElPeVRuNFU3Nk9ORnVFdC9LTnpERzZiQ2ZUemluVHQ0L2gyZEFVcmhGdTd4SWR5bS95bnNrNytFTzNqQ3QzQ1gvbzl3RHl2OENmZng2ZzNUeUJTeEtkeFNKL3NzdEdkNS9xNjByVkpUcUVrd1Bsc0xYV2diT3IxUjY2T3FEc25VdVZqRjF1UnF6cTdPTXFOS2EzWTZjc0hXdVhJMkdzWGlCNUhKa1NLQ1FZRzRxUTVMYUNUWUkwTUllOVc5MUN1bUxTcjZ0VmFZSU1ENEtyVmdxbWlTSVpYR2hzazFqcXdWRGp4dFN0Y3hyZmhhenVTa3VjeHEzaVFqSy83dnVyZWpFOUVQc0cybVNzd3c0aE5mNUlQbUR2ay9QUkZlcUFBQUFIaWNZMkJpZ0FBNUJ1eUFpWkdKa1ptQktkT0FnUUVBQnlrQXhRQT1cXFwiXCI7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiLy8gVGhpcyBmdW5jdGlvbiBhbGxvdyB0byByZWZlcmVuY2UgYXN5bmMgY2h1bmtzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnUgPSAoY2h1bmtJZCkgPT4ge1xuXHQvLyByZXR1cm4gdXJsIGZvciBmaWxlbmFtZXMgYmFzZWQgb24gdGVtcGxhdGVcblx0cmV0dXJuIFwiXCIgKyBjaHVua0lkICsgXCIuanNcIjtcbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjO1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHtcblx0XHRcdHZhciBpID0gc2NyaXB0cy5sZW5ndGggLSAxO1xuXHRcdFx0d2hpbGUgKGkgPiAtMSAmJiAhc2NyaXB0VXJsKSBzY3JpcHRVcmwgPSBzY3JpcHRzW2ktLV0uc3JjO1xuXHRcdH1cblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5iID0gZG9jdW1lbnQuYmFzZVVSSSB8fCBzZWxmLmxvY2F0aW9uLmhyZWY7XG5cbi8vIG9iamVjdCB0byBzdG9yZSBsb2FkZWQgYW5kIGxvYWRpbmcgY2h1bmtzXG4vLyB1bmRlZmluZWQgPSBjaHVuayBub3QgbG9hZGVkLCBudWxsID0gY2h1bmsgcHJlbG9hZGVkL3ByZWZldGNoZWRcbi8vIFtyZXNvbHZlLCByZWplY3QsIFByb21pc2VdID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxudmFyIGluc3RhbGxlZENodW5rcyA9IHtcblx0Mjk2OiAwXG59O1xuXG4vLyBubyBjaHVuayBvbiBkZW1hbmQgbG9hZGluZ1xuXG4vLyBubyBwcmVmZXRjaGluZ1xuXG4vLyBubyBwcmVsb2FkZWRcblxuLy8gbm8gSE1SXG5cbi8vIG5vIEhNUiBtYW5pZmVzdFxuXG4vLyBubyBvbiBjaHVua3MgbG9hZGVkXG5cbi8vIG5vIGpzb25wIGZ1bmN0aW9uIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fSFRNTF9MT0FERVJfR0VUX1NPVVJDRV9GUk9NX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2h0bWwtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIjtcbnZhciBfX19IVE1MX0xPQURFUl9JTVBPUlRfMF9fXyA9IG5ldyBVUkwoXCIuLi9zcmMvYXNzZXRzL2ljb25zZm9udC9pY29uc2ZvbnQuY3NzXCIsIGltcG9ydC5tZXRhLnVybCk7XG4vLyBNb2R1bGVcbnZhciBfX19IVE1MX0xPQURFUl9SRVBMQUNFTUVOVF8wX19fID0gX19fSFRNTF9MT0FERVJfR0VUX1NPVVJDRV9GUk9NX0lNUE9SVF9fXyhfX19IVE1MX0xPQURFUl9JTVBPUlRfMF9fXyk7XG52YXIgY29kZSA9IFwiPCFET0NUWVBFIGh0bWw+IDxodG1sIGxhbmc9XFxcImVuXFxcIj4gPGhlYWQ+IDxtZXRhIGNoYXJzZXQ9XFxcIlVURi04XFxcIj4gPG1ldGEgbmFtZT1cXFwidmlld3BvcnRcXFwiIGNvbnRlbnQ9XFxcIndpZHRoPWRldmljZS13aWR0aCxpbml0aWFsLXNjYWxlPTFcXFwiPiA8bWV0YSBodHRwLWVxdWl2PVxcXCJYLVVBLUNvbXBhdGlibGVcXFwiIGNvbnRlbnQ9XFxcImllPWVkZ2VcXFwiLz4gPGxpbmsgcmVsPVxcXCJzdHlsZXNoZWV0XFxcIiBocmVmPVxcXCJcIiArIF9fX0hUTUxfTE9BREVSX1JFUExBQ0VNRU5UXzBfX18gKyBcIlxcXCI+IDx0aXRsZT5Eb2N1bWVudDwvdGl0bGU+IDwvaGVhZD4gPGJvZHk+IDxkaXYgY2xhc3M9XFxcIndyYXBwZXJcXFwiPiA8aGVhZGVyPiA8bmF2IGNsYXNzPVxcXCJkcm9wZG93blxcXCI+IDxkaXYgY2xhc3M9XFxcImRyb3Bkb3duX19ibG9ja1xcXCI+IDxidXR0b24gY2xhc3M9XFxcImRyb3BidG5cXFwiPkRyb3Bkb3duPC9idXR0b24+IDxkaXYgY2xhc3M9XFxcImRyb3Bkb3duX19jb250ZW50XFxcIj4gPGEgaHJlZj1cXFwiI1xcXCI+TGluayAxPC9hPiA8YSBocmVmPVxcXCIjXFxcIj5MaW5rIDI8L2E+IDxhIGhyZWY9XFxcIiNcXFwiPkxpbmsgMzwvYT4gPC9kaXY+IDwvZGl2PiA8ZGl2IGNsYXNzPVxcXCJkcm9wZG93bl9fYmxvY2tcXFwiPiA8YnV0dG9uIGNsYXNzPVxcXCJkcm9wYnRuXFxcIj5Ecm9wZG93bjwvYnV0dG9uPiA8ZGl2IGNsYXNzPVxcXCJkcm9wZG93bl9fY29udGVudFxcXCI+IDxhIGhyZWY9XFxcIiNcXFwiPkxpbmsgMTwvYT4gPGEgaHJlZj1cXFwiI1xcXCI+TGluayAyPC9hPiA8YSBocmVmPVxcXCIjXFxcIj5MaW5rIDM8L2E+IDwvZGl2PiA8L2Rpdj4gPGRpdiBjbGFzcz1cXFwiZHJvcGRvd25fX2Jsb2NrXFxcIj4gPGJ1dHRvbiBjbGFzcz1cXFwiZHJvcGJ0blxcXCI+RHJvcGRvd248L2J1dHRvbj4gPGRpdiBjbGFzcz1cXFwiZHJvcGRvd25fX2NvbnRlbnRcXFwiPiA8YSBocmVmPVxcXCIjXFxcIj5MaW5rIDE8L2E+IDxhIGhyZWY9XFxcIiNcXFwiPkxpbmsgMjwvYT4gPGEgaHJlZj1cXFwiI1xcXCI+TGluayAzPC9hPiA8L2Rpdj4gPC9kaXY+IDwvbmF2PiA8L2hlYWRlcj4gPG1haW4+IDxzZWN0aW9uIGNsYXNzPVxcXCJjaGVja2JveFxcXCI+IDxpbnB1dCB0eXBlPVxcXCJjaGVja2JveFxcXCIgaWQ9XFxcImNsaWNrXFxcIiBjbGFzcz1cXFwiYnVyZ2VyLWlucHV0XFxcIi8+IDxsYWJlbCBmb3I9XFxcImNsaWNrXFxcIj4gPGRpdiBjbGFzcz1cXFwiYnVyZ2VyXFxcIj48L2Rpdj4gPC9sYWJlbD4gPG5hdiBjbGFzcz1cXFwiY2hlY2tib3hfX2Jsb2NrXFxcIj4gPHVsIGNsYXNzPVxcXCJjaGVja2JveF9fbGlua3NcXFwiPiA8bGk+PGEgaHJlZj1cXFwiI1xcXCI+TGluayAxPC9hPjwvbGk+IDxsaT48YSBocmVmPVxcXCIjXFxcIj5MaW5rIDI8L2E+PC9saT4gPGxpPjxhIGhyZWY9XFxcIiNcXFwiPkxpbmsgMzwvYT48L2xpPiA8L3VsPiA8L25hdj4gPC9zZWN0aW9uPiA8c2VjdGlvbiBjbGFzcz1cXFwiaWNvbnNcXFwiPiA8ZGl2IGNsYXNzPVxcXCJpY29uc19fbGlua1xcXCI+IDxhIGhyZWY9XFxcIiNcXFwiIGNsYXNzPVxcXCJsaW5rIF9pY29uLWNzczNcXFwiPmljb24gdGVzdDwvYT4gPGEgaHJlZj1cXFwiI1xcXCIgY2xhc3M9XFxcImxpbmsgX2ljb24taHRtbDVcXFwiPmljb24gdGVzdDwvYT4gPGEgaHJlZj1cXFwiI1xcXCIgY2xhc3M9XFxcImxpbmsgX2ljb24tanNcXFwiPmljb24gdGVzdDwvYT4gPC9kaXY+IDwvc2VjdGlvbj4gPC9tYWluPiA8Zm9vdGVyPiA8ZGl2IGNsYXNzPVxcXCJhbmltYXRpb25cXFwiPiA8ZGl2IGNsYXNzPVxcXCJzcXVhcmVfX2FuaW1hdGlvblxcXCI+PC9kaXY+IDxkaXYgY2xhc3M9XFxcInNxdWFyZV9fdHJhbnNpdGlvblxcXCI+PC9kaXY+IDxkaXYgY2xhc3M9XFxcInNxdWFyZV9fc2V0dGltZW91dFxcXCI+IDxkaXYgY2xhc3M9XFxcInNxdWFyZVxcXCI+PC9kaXY+IDwvZGl2PiA8ZGl2IGNsYXNzPVxcXCJzcXVhcmUtYW5pbWF0aW9uLWZyYW1lXFxcIj4gPGRpdiBjbGFzcz1cXFwic3F1YXJlXFxcIj48L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Zvb3Rlcj4gPC9kaXY+IDxkaXYgY2xhc3M9XFxcInNvcnRcXFwiPiA8YnV0dG9uIGlkPVxcXCJidXR0b25cXFwiIGNsYXNzPVxcXCJidXR0b25cXFwiPkJ1YmJsZSBzb3J0PC9idXR0b24+IDwvZGl2PiA8L2JvZHk+IDwvaHRtbD5cIjtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IGNvZGU7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVszXSEuL3N0eWxlLnNjc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVszXSEuL3N0eWxlLnNjc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCIvKiBlc2xpbnQtZGlzYWJsZSBuby11c2UtYmVmb3JlLWRlZmluZSAqL1xuaW1wb3J0ICcuLi8uLi9wdWJsaWMvaW5kZXguaHRtbCc7XG5cbmltcG9ydCAnLi4vYXNzZXRzL3N0eWxlLnNjc3MnO1xuXG4vLyByZXF1ZXN0IGFuaW1hdGlvbiBmcmFtZVxuXG5sZXQgcG9zaXRpb24gPSAwO1xubGV0IGRpcmVjdGlvbiA9IDI7XG5mdW5jdGlvbiBhbmltYXRlU3F1YXJlKCkge1xuICBjb25zdCBwYXJlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc3F1YXJlLWFuaW1hdGlvbi1mcmFtZScpO1xuICBjb25zdCBzcXVhcmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc3F1YXJlLWFuaW1hdGlvbi1mcmFtZSA+IC5zcXVhcmUnKTtcblxuICBwb3NpdGlvbiArPSBkaXJlY3Rpb247XG4gIHNxdWFyZS5zdHlsZS5sZWZ0ID0gYCR7cG9zaXRpb259cHhgO1xuICBpZiAoXG4gICAgcG9zaXRpb25cbiAgICAgID49IHBhcmVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aFxuICAgICAgICAtIHNxdWFyZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aFxuICAgIHx8IHBvc2l0aW9uIDw9IDBcbiAgKSB7XG4gICAgZGlyZWN0aW9uICo9IC0xO1xuICB9XG4gIHJlcXVlc3RBbmltYXRpb25GcmFtZShhbmltYXRlU3F1YXJlKTtcbn1cbmFuaW1hdGVTcXVhcmUoKTtcblxuLy8gc2V0VGltZU91dFxuXG5sZXQgc2V0VGltZW91dFBvc2l0aW9uID0gMDtcbmxldCBzZXRUaW1lb3V0RGlyZWN0aW9uID0gMjtcbmNvbnN0IGNvbnRhaW5lcldpZHRoID0gZG9jdW1lbnRcbiAgLnF1ZXJ5U2VsZWN0b3IoJy5zcXVhcmVfX3NldHRpbWVvdXQnKVxuICAuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGg7XG5jb25zdCBhbmltYXRpb25JbnRlcnZhbCA9IDY7XG5mdW5jdGlvbiBhbmltYXRlU3F1YXJlV2l0aFNldFRpbWVvdXQoKSB7XG4gIGNvbnN0IHNxdWFyZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zcXVhcmVfX3NldHRpbWVvdXQgPiAuc3F1YXJlJyk7XG4gIGNvbnN0IHNxdWFyZVdpZHRoID0gc3F1YXJlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoO1xuICBzZXRUaW1lb3V0UG9zaXRpb24gKz0gc2V0VGltZW91dERpcmVjdGlvbjtcbiAgc3F1YXJlLnN0eWxlLmxlZnQgPSBgJHtzZXRUaW1lb3V0UG9zaXRpb259cHhgO1xuICBpZiAoXG4gICAgc2V0VGltZW91dFBvc2l0aW9uID49IGNvbnRhaW5lcldpZHRoIC0gc3F1YXJlV2lkdGhcbiAgICB8fCBzZXRUaW1lb3V0UG9zaXRpb24gPD0gMFxuICApIHtcbiAgICBzZXRUaW1lb3V0RGlyZWN0aW9uICo9IC0xO1xuICB9XG4gIHNldFRpbWVvdXQoYW5pbWF0ZVNxdWFyZVdpdGhTZXRUaW1lb3V0LCBhbmltYXRpb25JbnRlcnZhbCk7XG59XG5hbmltYXRlU3F1YXJlV2l0aFNldFRpbWVvdXQoKTtcblxuLy8gc29ydFxuXG4vLyBjb25zdCBjcmVhdGVBcnJheSA9IChhcnJheUxlbmd0aCkgPT4ge1xuLy8gICBjb25zdCBhcnJheSA9IFtdO1xuLy8gICB3aGlsZSAoYXJyYXkubGVuZ3RoIDwgYXJyYXlMZW5ndGgpIHtcbi8vICAgICAgIGFycmF5LnB1c2goTWF0aC5yYW5kb20oKSlcbi8vICAgfVxuLy8gICByZXR1cm4gYXJyYXk7XG4vLyB9XG5cbmNvbnN0IGJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdidXR0b24nKTtcbi8vIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGJ1YmJsZVNvcnQoQXJyYXkuZnJvbSh7bGVuZ3RoOiAxMDAwMDB9LFxuLy8gKCkgPT4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTAwMDAwKSkpKTtcbi8vIGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNlbGVjdGlvblNvcnQoQXJyYXkuZnJvbSh7bGVuZ3RoOiAxMDAwMDB9LFxuLy8gKCkgPT4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTAwMDAwKSkpKTtcbmJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgY29uc3Qgd29ya2VyID0gbmV3IFdvcmtlcihuZXcgVVJMKCcuL3dvcmtlci5qcycsIGltcG9ydC5tZXRhLnVybCkpO1xuXG4gIGNvbnN0IGFycjEgPSBBcnJheS5mcm9tKFxuICAgIHsgbGVuZ3RoOiAxMDAwMDAgfSxcbiAgICAoKSA9PiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMDAwMDApLFxuICApO1xuICBjb25zdCBhcnIyID0gQXJyYXkuZnJvbShcbiAgICB7IGxlbmd0aDogMTAwMDAwIH0sXG4gICAgKCkgPT4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTAwMDAwKSxcbiAgKTtcblxuICB3b3JrZXIucG9zdE1lc3NhZ2UoeyBhcnIxLCBhcnIyIH0pO1xuXG4gIHdvcmtlci5vbm1lc3NhZ2UgPSBtZXNzYWdlcztcbn0pO1xuXG5mdW5jdGlvbiBtZXNzYWdlcyhldmVudCkge1xuICBjb25zb2xlLmxvZyhldmVudC5kYXRhKTtcbn1cblxuLy8gc3ZnXG5cbi8vIGRvY3VtZW50LmJvZHkuaW5uZXJIVE1MID0gJzxhIGNsYXNzPVwibXktaG91c2UtbGlua1wiIGhyZWY9XCIjXCI+IG15IGhvdXNlIDwvYT4nO1xuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fIiwiVVJMIiwiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwidXJsIiwib3B0aW9ucyIsIlN0cmluZyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidGVzdCIsInNsaWNlIiwiaGFzaCIsIm5lZWRRdW90ZXMiLCJyZXBsYWNlIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsIm1heWJlTmVlZFF1b3RlcyIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJjYWNoZWRNb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibSIsIm4iLCJnZXR0ZXIiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwidSIsImNodW5rSWQiLCJnIiwiZ2xvYmFsVGhpcyIsIkZ1bmN0aW9uIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsImN1cnJlbnRTY3JpcHQiLCJzcmMiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJwIiwiYiIsImJhc2VVUkkiLCJzZWxmIiwiaHJlZiIsIm5jIiwiX19fSFRNTF9MT0FERVJfSU1QT1JUXzBfX18iLCJsb2NhbHMiLCJwb3NpdGlvbiIsImRpcmVjdGlvbiIsImFuaW1hdGVTcXVhcmUiLCJwYXJlbnQiLCJzcXVhcmUiLCJsZWZ0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0Iiwid2lkdGgiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJzZXRUaW1lb3V0UG9zaXRpb24iLCJzZXRUaW1lb3V0RGlyZWN0aW9uIiwiY29udGFpbmVyV2lkdGgiLCJtZXNzYWdlcyIsImV2ZW50IiwiY29uc29sZSIsImxvZyIsImFuaW1hdGVTcXVhcmVXaXRoU2V0VGltZW91dCIsInNxdWFyZVdpZHRoIiwic2V0VGltZW91dCIsImdldEVsZW1lbnRCeUlkIiwiYWRkRXZlbnRMaXN0ZW5lciIsIndvcmtlciIsIldvcmtlciIsImFycjEiLCJBcnJheSIsImZyb20iLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJhcnIyIiwicG9zdE1lc3NhZ2UiLCJvbm1lc3NhZ2UiXSwic291cmNlUm9vdCI6IiJ9