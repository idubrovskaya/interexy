(()=>{"use strict";({632:function(){var t=this&&this.__awaiter||function(t,n,e,o){return new(e||(e=Promise))((function(r,i){function s(t){try{c(o.next(t))}catch(t){i(t)}}function a(t){try{c(o.throw(t))}catch(t){i(t)}}function c(t){var n;t.done?r(t.value):(n=t.value,n instanceof e?n:new e((function(t){t(n)}))).then(s,a)}c((o=o.apply(t,n||[])).next())}))};self.onmessage=function(n){return t(this,void 0,void 0,(function*(){const{arr1:t}=n.data,{arr2:e}=n.data,o=yield function(t){for(let n=t.length-1;n>0;n--)for(let e=0;e<n;e++)if(t[e]>t[e+1]){const n=t[e];t[e]=t[e+1],t[e+1]=n}return t}(t),r=yield(t=>{for(let n=0,e=t.length,o=e-1;n<o;n++){let o=n;for(let r=n+1;r<e;r++)t[o]>t[r]&&(o=r);o!==n&&([t[n],t[o]]=[t[o],t[n]])}return t})(e);self.postMessage({sortRes:o,sortRes2:r})}))}}})[632]()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjMyLmpzIiwibWFwcGluZ3MiOiJvV0FpQ0FBLEtBQUtDLFVBQVksU0FBZ0JDLEcseUNBQy9CLE1BQU0sS0FBRUMsR0FBU0QsRUFBTUUsTUFDakIsS0FBRUMsR0FBU0gsRUFBTUUsS0FFakJFLFFBbENSLFNBQW9CQyxHQUVsQixJQUFLLElBQUlDLEVBQUlELEVBQUlFLE9BQVMsRUFBR0QsRUFBSSxFQUFHQSxJQUVsQyxJQUFLLElBQUlFLEVBQUksRUFBR0EsRUFBSUYsRUFBR0UsSUFDckIsR0FBSUgsRUFBSUcsR0FBS0gsRUFBSUcsRUFBSSxHQUFJLENBQ3ZCLE1BQU1DLEVBQU9KLEVBQUlHLEdBQ2pCSCxFQUFJRyxHQUFLSCxFQUFJRyxFQUFJLEdBQ2pCSCxFQUFJRyxFQUFJLEdBQUtDLEMsQ0FJbkIsT0FBT0osQ0FDVCxDQXFCd0JLLENBQVdULEdBQzNCVSxPQXBCYyxDQUFDTixJQUNyQixJQUFLLElBQUlHLEVBQUksRUFBR0ksRUFBSVAsRUFBSUUsT0FBUU0sRUFBSUQsRUFBSSxFQUFHSixFQUFJSyxFQUFHTCxJQUFLLENBQ3JELElBQUlNLEVBQVdOLEVBQ2YsSUFBSyxJQUFJRixFQUFJRSxFQUFJLEVBQUdGLEVBQUlNLEVBQUdOLElBQ3JCRCxFQUFJUyxHQUFZVCxFQUFJQyxLQUN0QlEsRUFBV1IsR0FHWFEsSUFBYU4sS0FDZEgsRUFBSUcsR0FBSUgsRUFBSVMsSUFBYSxDQUFDVCxFQUFJUyxHQUFXVCxFQUFJRyxJLENBR2xELE9BQU9ILENBQUcsRUFRYVUsQ0FBY1osR0FFckNMLEtBQUtrQixZQUFZLENBQUVaLFVBQVNPLFlBQzlCLEcsS0NyQ29CLE0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcm9qZWN0XzEvLi9zcmMvYXBwL3dvcmtlci50c3giLCJ3ZWJwYWNrOi8vcHJvamVjdF8xL3dlYnBhY2svc3RhcnR1cCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBuby1yZXN0cmljdGVkLWdsb2JhbHMgKi9cbi8qIGVzbGludC1kaXNhYmxlIG5vLXBsdXNwbHVzICovXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1wYXJhbS1yZWFzc2lnbiAqL1xuZnVuY3Rpb24gYnViYmxlU29ydChhcnI6IFtdKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wbHVzcGx1c1xuICBmb3IgKGxldCBqID0gYXJyLmxlbmd0aCAtIDE7IGogPiAwOyBqLS0pIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGx1c3BsdXNcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGo7IGkrKykge1xuICAgICAgaWYgKGFycltpXSA+IGFycltpICsgMV0pIHtcbiAgICAgICAgY29uc3QgdGVtcCA9IGFycltpXTtcbiAgICAgICAgYXJyW2ldID0gYXJyW2kgKyAxXTtcbiAgICAgICAgYXJyW2kgKyAxXSA9IHRlbXA7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiBhcnI7XG59XG5cbmNvbnN0IHNlbGVjdGlvblNvcnQgPSAoYXJyOiBbXSkgPT4ge1xuICBmb3IgKGxldCBpID0gMCwgbCA9IGFyci5sZW5ndGgsIGsgPSBsIC0gMTsgaSA8IGs7IGkrKykge1xuICAgIGxldCBpbmRleE1pbiA9IGk7XG4gICAgZm9yIChsZXQgaiA9IGkgKyAxOyBqIDwgbDsgaisrKSB7XG4gICAgICBpZiAoYXJyW2luZGV4TWluXSA+IGFycltqXSkge1xuICAgICAgICBpbmRleE1pbiA9IGo7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChpbmRleE1pbiAhPT0gaSkge1xuICAgICAgW2FycltpXSwgYXJyW2luZGV4TWluXV0gPSBbYXJyW2luZGV4TWluXSwgYXJyW2ldXTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGFycjtcbn07XG5cbnNlbGYub25tZXNzYWdlID0gYXN5bmMgZnVuY3Rpb24gKGV2ZW50KSB7XG4gIGNvbnN0IHsgYXJyMSB9ID0gZXZlbnQuZGF0YTtcbiAgY29uc3QgeyBhcnIyIH0gPSBldmVudC5kYXRhO1xuXG4gIGNvbnN0IHNvcnRSZXMgPSBhd2FpdCBidWJibGVTb3J0KGFycjEpO1xuICBjb25zdCBzb3J0UmVzMiA9IGF3YWl0IHNlbGVjdGlvblNvcnQoYXJyMik7XG5cbiAgc2VsZi5wb3N0TWVzc2FnZSh7IHNvcnRSZXMsIHNvcnRSZXMyIH0pO1xufTtcbiIsIi8vIHN0YXJ0dXBcbi8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuLy8gVGhpcyBlbnRyeSBtb2R1bGUgaXMgcmVmZXJlbmNlZCBieSBvdGhlciBtb2R1bGVzIHNvIGl0IGNhbid0IGJlIGlubGluZWRcbnZhciBfX3dlYnBhY2tfZXhwb3J0c19fID0ge307XG5fX3dlYnBhY2tfbW9kdWxlc19fWzYzMl0oKTtcbiJdLCJuYW1lcyI6WyJzZWxmIiwib25tZXNzYWdlIiwiZXZlbnQiLCJhcnIxIiwiZGF0YSIsImFycjIiLCJzb3J0UmVzIiwiYXJyIiwiaiIsImxlbmd0aCIsImkiLCJ0ZW1wIiwiYnViYmxlU29ydCIsInNvcnRSZXMyIiwibCIsImsiLCJpbmRleE1pbiIsInNlbGVjdGlvblNvcnQiLCJwb3N0TWVzc2FnZSJdLCJzb3VyY2VSb290IjoiIn0=